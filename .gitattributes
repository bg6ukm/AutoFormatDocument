Sub 公文初始化(doc As Document, fzfs As String)
    ' 清除所有格式
    doc.content.Select
    Selection.ClearFormatting
    ' 清除页眉页脚
    For Each Section In doc.Sections
        For Each HeaderFooter In Section.Headers
            HeaderFooter.Range.Text = ""
        Next HeaderFooter
        
        For Each HeaderFooter In Section.Footers
            HeaderFooter.Range.Text = ""
        Next HeaderFooter
    Next Section
        
    '设置页边距（上下3.6厘米，左右2.7厘米）
    With doc.PageSetup
      .TopMargin = CentimetersToPoints(3.6)
      .BottomMargin = CentimetersToPoints(3.6)
      .LeftMargin = CentimetersToPoints(2.7)
      .RightMargin = CentimetersToPoints(2.7)
    End With
 
    '设置文档的默认字体和段落格式
    With doc.content
         .Font.Name = fzfs
         .Font.Size = 16
         .Font.Bold = False
    End With
    With doc.content.ParagraphFormat
     .LineSpacingRule = wdLineSpaceExactly
     .LineSpacing = 28
     .FirstLineIndent = 32
     .SpaceBefore = 0
     .SpaceAfter = 0
     .Alignment = wdAlignParagraphJustify ' 两端对齐
    End With
End Sub

Sub 文章标题处理(doc As Document, fzxbs As String, fzkt As String)
    titleSet = False
    paraCount = 0
    ' 遍历文档中的每个段落
    For Each para In doc.Paragraphs
    ' 判断段落是否为标题
        'If Not titleSet Then
        paraCount = paraCount + 1
        If paraCount = 1 Then
            ' 设置标题格式
            With para.Range
                .Font.Name = fzxbs
                .Font.Size = 22
                .Font.Bold = True
                .ParagraphFormat.Alignment = wdAlignParagraphCenter  ' 居中对齐
                .ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
                .ParagraphFormat.LineSpacing = 28
                .ParagraphFormat.FirstLineIndent = 0  '取消首行缩进
            End With
            titleSet = True
        ElseIf paraCount = 2 Then
            '设置第二段格式，单位或个人名称
            With para.Range
                .Font.Name = fzkt
                .Font.Size = 16
                .Font.Bold = True
                .ParagraphFormat.Alignment = wdAlignParagraphCenter  ' 居中对齐
                .ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
                .ParagraphFormat.LineSpacing = 28
                .ParagraphFormat.FirstLineIndent = 0  '取消首行缩进
            End With
            para.Range.InsertParagraphAfter  '加入一个空白行
            para.Range.InsertParagraphAfter  '加入第二个空白行
            
            '添加当天日期
            Dim newPara As Range
            Set newPara = para.Next.Range
            With newPara
                .Text = "（" & Format(Date, "yyyy年m月d日") & "）" & .Text  ' 插入当前日期
                .Font.Name = fzkt
                .Font.Size = 16
                .Font.Bold = True
                .ParagraphFormat.Alignment = wdAlignParagraphCenter  ' 居中对齐
                .ParagraphFormat.LineSpacingRule = wdLineSpaceExactly
                .ParagraphFormat.LineSpacing = 28
                 .ParagraphFormat.FirstLineIndent = 0  '取消首行缩进
            End With
        End If
    Next para
End Sub

Sub 句号前置句判断()
'重点看和修改
    On Error GoTo ErrorHandler ' 添加错误处理
    
    Dim myRange As Range
    Dim strA As String
    Dim reg As Object
    Dim titles As Object
    Dim title As Variant
    Dim patterns(0 To 4) As String
    Dim i As Integer
    Dim chineseNumbers() As String
    Dim chineseNumberPattern As String
    Dim num As Variant
    
    ' 定义中文数字数组
    chineseNumbers = Split("一,二,三,四,五,六,七,八,九,十,十一,十二,十三,十四,十五,十六,十七,十八,十九,二十,二十一,二十二,二十三,二十四,二十五,二十六,二十七,二十八,二十九,三十,三十一,三十二,三十三,三十四,三十五,三十六,三十七,三十八,三十九,四十,四十一,四十二,四十三,四十四,四十五,四十六,四十七,四十八,四十九,五十", ",")
    
    ' 构建中文数字的正则表达式模式
    chineseNumberPattern = ""
    For Each num In chineseNumbers
        chineseNumberPattern = chineseNumberPattern & "|" & num
    Next num
    chineseNumberPattern = Mid(chineseNumberPattern, 2) ' 去掉开头的 "|"
    
    Set myRange = ActiveDocument.content
    strA = myRange.Text
    Set reg = CreateObject("vbscript.regexp")
    
    ' 设置各级标题的正则表达式模式
    patterns(0) = "(\r(" & chineseNumberPattern & "、)[^\r]*\r)" ' 一级标题
    patterns(1) = "((（" & chineseNumberPattern & "）)([^。\r：])*[。|\r：])" ' 二级标题
    patterns(2) = "(\r\d{1,2}(\.|．)([^。])*。)" ' 三级标题
    patterns(3) = "((（1）|（2）|（3）|（4）|（5）)([^。\r：])*[。|\r：])" ' 四级标题
    patterns(4) = "[\r，,。.；;：;](((" & chineseNumberPattern & "是)([^。])*)[。]?)" ' 五级标题（允许没有句号）
    
    ' 遍历各级标题的正则表达式模式
    For i = 0 To 4
        reg.Global = True
        reg.Pattern = patterns(i)
        Set titles = reg.Execute(strA)
        
        If titles.Count > 0 Then
            For Each title In titles
                With Selection.Find
                    .ClearFormatting
                    .Text = title.Value
                    .Execute Forward:=True
                End With
                
                If Selection.Find.Found Then
                    With Selection.Font
                        .Bold = True
                        .ColorIndex = wdBlack
                    End With
                    
                    ' 对各级标题的句号前内容加粗，如果没有句号则整段加粗
                    Dim content As String
                    content = Selection.Text
                    Dim dotPos As Integer
                    dotPos = InStr(content, "。")
                    
                    If dotPos > 0 Then
                        ' 句号存在，只对第一个句号前的内容加粗
                        Selection.MoveStartUntil CSet:="。"
                        Selection.MoveEnd wdCharacter, -1
                        Selection.Font.Bold = True
                        Selection.Collapse wdCollapseEnd
                    Else
                        ' 句号不存在，整段加粗
                        Selection.Paragraphs(1).Range.Font.Bold = True
                        Selection.Collapse wdCollapseEnd
                    End If
                End If
                
                Selection.HomeKey unit:=wdStory
            Next title
        End If
    Next i
    
    Exit Sub ' 正常退出
    
ErrorHandler:
    MsgBox "发生错误: " & Err.Description & " (错误代码: " & Err.Number & ")", vbCritical, "错误"
    Debug.Print "错误发生在: " & Erl()
    Exit Sub

End Sub

Sub 四级标题排版(doc As Document, fzxbs As String, fzht As String, fzkt As String, fzfs As String)
    Dim chineseNumbers As Variant
    chineseNumbers = Array("一", "二", "三", "四", "五", "六", "七", "八", "九", "十", "十一", "十二", "十三", "十四", "十五", "十六", "十七", "十八", "十九", "二十", "二十一", "二十二", "二十三", "二十四", "二十五", "二十六", "二十七", "二十八", "二十九", "三十", "四十一", "四十二", "四十三", "四十四", "四十五", "四十六", "四十七", "四十八", "四十九", "五十")
    '目前支持到"五十"，根据需要可以加
    Dim i As Integer
    For Each para In doc.Paragraphs
        '判断段落是否为一级标题
        For i = LBound(chineseNumbers) To UBound(chineseNumbers)
            If para.Range.Text Like chineseNumbers(i) & "、*" Then
                 ' 设置一级标题格式
                 With para.Range
                    .Font.Name = fzht
                    .Font.Size = 16
                    .Font.Bold = True
                 End With
                 Exit For
            End If
        Next i
        
        '判断段落是否为二级标题
        For i = LBound(chineseNumbers) To UBound(chineseNumbers)
            If para.Range.Text Like "（" & chineseNumbers(i) & "）*" Then
                 ' 设置二级标题格式
                 With para.Range
                    .Font.Name = fzkt
                    .Font.Size = 16
                    .Font.Bold = True
                 End With
                 Exit For
            End If
        Next i
        
        
        '判断段落是否为三级标题
        For i = 1 To 50
            If para.Range.Text Like CStr(i) & ".*" Then
                ' 设置三级标题格式
                With para.Range
                    .Font.Name = fzfs
                    .Font.Size = 16
                    .Font.Bold = True
                End With
                Exit For
            End If
        Next i
        
        '判断段落是否为四级标题
        For i = 1 To 10     '四级标题只考虑到（10），增加程序运行效率，可以自行修改
            If para.Range.Text Like "（" & CStr(i) & "）*" Then
                ' 设置四级标题格式
                With para.Range
                    .Font.Name = fzfs
                    .Font.Size = 16
                    .Font.Bold = True
                End With
                Exit For
            End If
        Next i
    Next para
End Sub

Sub 正文内部标题处理(doc As Document)


End Sub
Sub 页码设置(doc As Document)
    Dim footer As HeaderFooter
    Set footer = doc.Sections(1).Footers(wdHeaderFooterPrimary)
        'With doc.Sections(1).PageSetup
        '    .DifferentFirstPageHeaderFooter = True
        '    .OddAndEvenPagesHeaderFooter = False
        'End With
        'ActiveDocument.Sections(1).Footers(wdHeaderFooterPrimary).PageNumbers.Add FirstPage:=True
        
        With footer.PageNumbers
            .NumberStyle = wdPageNumberStyleNumberInDash    'wdPageNumberStyleNumberInDash 带划线数字样式。
            .RestartNumberingAtSection = True  '不续前节
            .StartingNumber = 1   '从1开始编号
            .Add.Alignment = wdAlignPageNumberOutside  '奇左偶右 .Alignment = wdAlignPageNumberInside
        End With
        
        With footer.Range
            .Font.Name = "宋体" ' 设置字体为宋体
            .Font.Size = 14 ' 设置字号为四号（14磅）
            .Fields.Add Range:=.Duplicate, Type:=wdFieldPage    '从文本框变到页脚正文，奇左偶右空一个字符未解决
            .ParagraphFormat.Alignment = wdAlignParagraphCenter  ' 居中对齐，或者屏蔽后奇左偶右
        End With
End Sub
Sub AutoFormatDocument()
    Dim doc As Document
    Dim para As Paragraph
    Dim fzxbs As String
    Dim fzht As String
    Dim fzkt As String
    Dim fzfs As String
    Set doc = ActiveDocument    ' 获取当前文档
    fzxbs = "方正小标宋_GBK"    '如果没有方正字体，根据电脑中字体格式修改字体名称
    fzht = "方正黑体_GBK"
    fzkt = "方正楷体_GBK"
    fzfs = "方正仿宋_GBK"

Call 公文初始化(doc, fzfs)
Call 文章标题处理(doc, fzxbs, fzkt)
Call 四级标题排版(doc, fzxbs, fzht, fzkt, fzfs)
Call 正文内部标题处理(doc)
Call 页码设置(doc)

MsgBox "公文排版已完成！"
End Sub
